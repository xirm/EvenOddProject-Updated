import pandas as pd
import json
from config import config

def preprocess_data(volatility):
    file_path = f'{volatility}_data.json'
    print(f"Processing file: {file_path}")
    
    try:
        with open(file_path, 'r') as f:
            data = json.load(f)
        
        if isinstance(data, list):
            df = pd.DataFrame(data)
        else:
            df = pd.DataFrame(data['prices'], columns=['tick'])
            df['time'] = data['times']
        
        df['last_digit'] = df['tick'].apply(lambda x: int(str(x)[-1]))
        df['tick_diff'] = df['tick'].diff()  # Difference between consecutive ticks
        df['moving_avg'] = df['tick'].rolling(window=3).mean()  # Moving average of last 3 ticks

        # Ensure we only keep the necessary columns
        df = df[['tick', 'tick_diff', 'moving_avg', 'last_digit']]
        
        df.dropna(inplace=True)  # Drop rows with NaN values generated by diff or rolling

        output_file = f'{volatility}_data_preprocessed.csv'
        df.to_csv(output_file, index=False)
        print(f"Saved preprocessed data to {output_file}")
    except Exception as e:
        print(f"An error occurred while processing {file_path}: {e}")

for volatility in config['volatilities']:
    preprocess_data(volatility)
